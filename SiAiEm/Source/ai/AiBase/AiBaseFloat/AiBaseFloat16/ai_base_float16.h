/**
 ******************************************************************************
 * file    ai_base_float16.h
 * author  sunlingge
 * version V100
 * brief   the ai base float 16 driver.
 ******************************************************************************
 */
#ifndef AI_BASE_FLOAT16_H
#define AI_BASE_FLOAT16_H

#ifdef __cplusplus
extern "C" {
#endif

#if (AI_BASE_FLOAT_FP16 == 1)
/*------------------------- Include File ------------------------------------*/

/*------------------------- Pre Type Definition -----------------------------*/
#define AI_BASE_FLOAT16_F_UINT					UINT16_T
#define AI_BASE_FLOAT16_F_ULONG					UINT32_T

/*------------------------- Macro Definition --------------------------------*/
/* 32 bit floats */
#define AI_BASE_FLOAT16_FSIGN_MASK32			(1 << 15)

#define AI_BASE_FLOAT16_F_SIZE					(16)
#define AI_BASE_FLOAT16_MANT_SIZE				(10)
#define AI_BASE_FLOAT16_EXP_SIZE				(5)

#define AI_BASE_FLOAT16_EXP_MASK				((1 << AI_BASE_FLOAT16_EXP_SIZE) - 1)
#define AI_BASE_FLOAT16_MANT_MASK				(((AI_BASE_FLOAT16_F_UINT)1 << AI_BASE_FLOAT16_MANT_SIZE) - 1)
#define AI_BASE_FLOAT16_SIGN_MASK				((AI_BASE_FLOAT16_F_UINT)1 << (AI_BASE_FLOAT16_F_SIZE - 1))
#define AI_BASE_FLOAT16_IMANT_SIZE				(AI_BASE_FLOAT16_F_SIZE - 2) /* internal mantissa size */
#define AI_BASE_FLOAT16_RND_SIZE				(AI_BASE_FLOAT16_IMANT_SIZE - AI_BASE_FLOAT16_MANT_SIZE)
#define AI_BASE_FLOAT16_QNAN_MASK				((AI_BASE_FLOAT16_F_UINT)1 << (AI_BASE_FLOAT16_MANT_SIZE - 1))

/* quiet NaN */
#define AI_BASE_FLOAT16_F_SIZE_STR				16
#define AI_BASE_FLOAT16_F_QNAN					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_F_QNAN, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_CLZ						AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_CLZ_U, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_PACK_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_PACK_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_UNPACK_SF				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_UNPACK_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_RSHIFT_RND				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_RSHIFT_RND, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_ROUND_PACK_SF			AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_ROUND_PACK_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_NORMALIZE_SF			AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_NORMALIZE_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_NORMALIZE2_SF			AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_NORMALIZE2_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_ISSIGNAN_SF				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_ISSIGNAN_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_ISNAN_SF				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_ISNAN_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_ADD_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_ADD_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_MUL_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_MUL_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_FMA_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_FMA_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_DIV_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_DIV_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_SQRT_SF					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_SQRT_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_NORMALIZE_SUBNORMAL_SF	AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_NORMALIZE_SUBNORMAL_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_DIVREM_U				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_DIVREM_U, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_SQRTREM_U				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_SQRTREM_U, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_MUL_U					AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_MUL_U, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_CVT_SF32_SF				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_CVT_SF32_SF, AI_BASE_FLOAT16_F_SIZE_STR)
#define AI_BASE_FLOAT16_CVT_SF64_SF				AI_BASE_FLOAT16_GLUE(AI_BASE_FLOAT16_CVT_SF64_SF, AI_BASE_FLOAT16_F_SIZE_STR)

#define AI_BASE_FLOAT16_F_QNAN16				(((AI_BASE_FLOAT16_F_UINT)AI_BASE_FLOAT16_EXP_MASK << AI_BASE_FLOAT16_MANT_SIZE) | ((AI_BASE_FLOAT16_F_UINT)1 << (AI_BASE_FLOAT16_MANT_SIZE - 1)))

#ifdef AI_BASE_FLOAT16_F_ULONG
#else
#define AI_BASE_FLOAT16_FH_SIZE					(AI_BASE_FLOAT16_F_SIZE / 2)
#endif

/*------------------------- Type Definition----------------------------------*/

/*------------------------- Function Definition -----------------------------*/
AI_BASE_FLOAT16_F_UINT AiBaseFloat16PackSf(UINT32_T a_sign, UINT32_T a_exp, AI_BASE_FLOAT16_F_UINT a_mant);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16UnpackSf(UINT32_T *pa_sign, INT32_T *pa_exp, AI_BASE_FLOAT16_F_UINT a);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16RshiftRnd(AI_BASE_FLOAT16_F_UINT a, INT32_T d);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16RoundPackSf(UINT32_T a_sign, INT32_T a_exp, AI_BASE_FLOAT16_F_UINT a_mant, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16NormalizeSf(UINT32_T a_sign, INT32_T a_exp, AI_BASE_FLOAT16_F_UINT a_mant, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16Normalize2Sf(UINT32_T a_sign, INT32_T a_exp, AI_BASE_FLOAT16_F_UINT a_mant1, AI_BASE_FLOAT16_F_UINT a_mant0, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
BOOL_T AiBaseFloat16IssignanSf(AI_BASE_FLOAT16_F_UINT a);
BOOL_T AiBaseFloat16IsnanSf(AI_BASE_FLOAT16_F_UINT a);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16AddSf(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16SubSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16NormalizeSubnormalSf(INT32_T *pa_exp, AI_BASE_FLOAT16_F_UINT a_mant);
#ifdef AI_BASE_FLOAT16_F_ULONG
AI_BASE_FLOAT16_F_UINT AiBaseFloat16MulU(AI_BASE_FLOAT16_F_UINT *plow, AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b);
#else
#if 0
AI_BASE_FLOAT16_F_UINT AiBaseFloat16MulU(AI_BASE_FLOAT16_F_UINT *plow, AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b);
#endif
#endif
AI_BASE_FLOAT16_F_UINT AiBaseFloat16MulSf(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16FmaSf(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, AI_BASE_FLOAT16_F_UINT c, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
#ifdef AI_BASE_FLOAT16_F_ULONG
AI_BASE_FLOAT16_F_UINT AiBaseFloat16DivremU(AI_BASE_FLOAT16_F_UINT *pr, AI_BASE_FLOAT16_F_UINT ah, AI_BASE_FLOAT16_F_UINT al, AI_BASE_FLOAT16_F_UINT b);
#else
AI_BASE_FLOAT16_F_UINT AiBaseFloat16DivremU(AI_BASE_FLOAT16_F_UINT *pr, AI_BASE_FLOAT16_F_UINT a1, AI_BASE_FLOAT16_F_UINT a0, AI_BASE_FLOAT16_F_UINT b);
#endif
AI_BASE_FLOAT16_F_UINT AiBaseFloat16DivSf(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
#ifdef AI_BASE_FLOAT16_F_ULONG
INT32_T AiBaseFloat16SqrtremU(AI_BASE_FLOAT16_F_UINT *pr, AI_BASE_FLOAT16_F_UINT ah, AI_BASE_FLOAT16_F_UINT al);
#else
INT32_T AiBaseFloat16SqrtremU(AI_BASE_FLOAT16_F_UINT *pr, AI_BASE_FLOAT16_F_UINT a1, AI_BASE_FLOAT16_F_UINT a0);
#endif
AI_BASE_FLOAT16_F_UINT AiBaseFloat16SqrtSf(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_ROUNDING_MODE_ENUM rm, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16MinSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, UINT32_T *pfflags);
AI_BASE_FLOAT16_F_UINT AiBaseFloat16MaxSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, UINT32_T *pfflags);
INT32_T AiBaseFloat16EqQuietSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, UINT32_T *pfflags);
INT32_T AiBaseFloat16LeSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, UINT32_T *pfflags);
INT32_T AiBaseFloat16LtSf16(AI_BASE_FLOAT16_F_UINT a, AI_BASE_FLOAT16_F_UINT b, UINT32_T *pfflags);
UINT32_T AiBaseFloat16FclassSf16(AI_BASE_FLOAT16_F_UINT a);

/*------------------------- End ---------------------------------------------*/
#endif

#ifdef __cplusplus
}
#endif

#endif
/*------------------------- End ---------------------------------------------*/

